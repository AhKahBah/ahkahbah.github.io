var m=Object.defineProperty;var v=(n,e,t)=>e in n?m(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var d=(n,e,t)=>v(n,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();function _(n,e,t,i,r){n===e[0]&&t>=e[2]&&t<=e[3]?(i.classList.add("left"),r._movesMade>3&&i.classList.add("enabled")):n===e[1]&&t>=e[2]&&t<=e[3]&&(i.classList.add("right"),r._movesMade>3&&i.classList.add("enabled")),t===e[2]&&n>=e[0]&&n<=e[1]?(i.classList.add("up"),r._movesMade>3&&i.classList.add("enabled")):t===e[3]&&n>=e[0]&&n<=e[1]&&(i.classList.add("down"),r._movesMade>3&&i.classList.add("enabled"))}function M(n,e){let t=document.getElementById("app");t.classList.add("board");let i=[n.currentGrid[0]-1,n.currentGrid[0]+3,n.currentGrid[1]-1,n.currentGrid[1]+3];for(let r=0;r<5;r++){let s=document.createElement("div");s.classList.add("row");for(let o=0;o<5;o++){let l=document.createElement("div");l.classList.add("cell"),l.innerHTML=n.board[r][o]||"_",l.addEventListener("click",a=>{e(r,o,a.target)}),n.currentGrid[0]<=r&&n.currentGrid[0]+3>r&&n.currentGrid[1]<=o&&n.currentGrid[1]+3>o?l.classList.add("grid"):_(r,i,o,l,n),s.appendChild(l)}t.appendChild(s)}return t}const f=(n,e)=>(n=Math.ceil(n),e=Math.floor(e),Math.floor(Math.random()*(e-n))+n);class y{constructor(e){d(this,"_board",[[],[],[],[],[]]);d(this,"CurrentPlayer","X");d(this,"_currentGrid",[1,1]);d(this,"_movesMade",0);d(this,"_movingInProcess",!1);d(this,"_ai");this._ai=e=="on"}get ai(){return this._ai}makeMove(e,t){let i=e>=this._currentGrid[0]&&e<=this._currentGrid[0]+2&&t>=this._currentGrid[1]&&t<=this._currentGrid[1]+2;if(i&&this._board[e][t]===void 0&&this._movesMade<10)this.addPiece(e,t);else if(i&&this._board[e][t]===this.CurrentPlayer&&this._movesMade>3)this.removePieceForMoving(e,t);else return"fail";return this._board[e][t]}removePieceForMoving(e,t){this.moveSuccess("-"),this._board[e][t]=void 0,this._movingInProcess=!0}addPiece(e,t){this._board[e][t]=this.CurrentPlayer,this.moveSuccess("+"),this.changePlayers(),this._movingInProcess=!1}moveGrid(e){if(this._movingInProcess)return;if(!this.checkGridMovingOk(e))return"fail";this.changePlayers()}checkGridMovingOk(e){return e.contains("left")?(this._currentGrid[0]-=1,!0):e.contains("right")?(this._currentGrid[0]+=1,!0):e.contains("up")?(this._currentGrid[1]-=1,!0):e.contains("down")?(this._currentGrid[1]+=1,!0):!1}changePlayers(){this.CurrentPlayer=this.CurrentPlayer==="X"?"O":"X"}get board(){return this._board}get movesMade(){return this._movesMade}get currentGrid(){return this._currentGrid}moveSuccess(e){e==="+"?this._movesMade+=1:e==="-"&&(this._movesMade-=1)}checkForWinner(){if(this.movesMade>4){let e=this.findRowsColumnsDiagonals();for(let t=0;t<e.length;t++){const i=e[t];let r=0;for(let s=0;s<i.length;s++){const o=i[s];r+=o==="X"?1:o==="O"?-1:0}if(Math.abs(r)===3)return i[0]}}}findNextForAI(){let e=this.CurrentPlayer,t=this.findRowsColumnsDiagonals();for(let i=0;i<t.length;i++){const r=t[i];let{sum:s,undefinedAt:o}=this.findWinLossPossibility(r);if(Math.abs(s)===2){this.PlayWinOrLossPreventingMove(i,o);break}}for(;e===this.CurrentPlayer;){let i=f(0,4),r=f(0,4);this.makeMove(i,r)}}PlayWinOrLossPreventingMove(e,t){e===6?this.makeMove(t+this._currentGrid[0],t+this._currentGrid[1]):e===7?this.makeMove(2-t+this._currentGrid[0],t+this._currentGrid[1]):e<3?this.makeMove(e+this._currentGrid[0],t+this._currentGrid[1]):e<6&&this.makeMove(t+this._currentGrid[0],e%3+this._currentGrid[1])}findWinLossPossibility(e){let t=0,i=-1;for(let r=0;r<e.length;r++){const s=e[r];s===void 0&&(i=r),t+=s==="X"?1:s==="O"?-1:0}return{sum:t,undefinedAt:i}}findRowsColumnsDiagonals(){let e=[[],[],[]];this.findGridInterior(e);let t=[[],[],[],[],[],[],[],[]];return this.fillArrayWithRowsColumnsDiagonals(t,e)}findGridInterior(e){for(let t=this._currentGrid[0];t<this._currentGrid[0]+3;t++)for(let i=this._currentGrid[1];i<this._currentGrid[1]+3;i++)e[t-this._currentGrid[0]][i-this._currentGrid[1]]=this._board[t][i]}fillArrayWithRowsColumnsDiagonals(e,t){let i=0;for(let r=0;r<3;r++)e[i]=t[r],i++;for(let r=0;r<3;r++)e[i][0]=t[0][r],e[i][1]=t[1][r],e[i][2]=t[2][r],i++;for(let r=0;r<3;r++)e[i][r]=t[r][r],e[i+1][r]=t[2-r][r];return e}}let u=document.querySelector("form");console.log(u);u.addEventListener("submit",n=>{n.preventDefault();let e=new FormData(u??void 0);console.log(e),e!==null&&(u.style.display="none",g(e.get("ai").toString()))});function g(n){function e(s,o,l){let a;if(l.classList.contains("grid"))a=r.makeMove(s,o),document.getElementById("player").innerText=r.CurrentPlayer;else if(r.movesMade>3&&(a=r.moveGrid(l.classList),a==="fail"))return;if(r.movesMade>3&&document.getElementById("moving").innerText!=="Moving allowed."?document.getElementById("moving").innerText="Moving allowed.":r.movesMade<4&&(document.getElementById("moving").innerText=`Moving allowed in ${4-r.movesMade} moves.`),a==="fail")return;a!==void 0?l.innerHTML=a:l.innerHTML="_";let c=r.checkForWinner();if(console.log(c),r.CurrentPlayer!==i&&c===void 0&&r.ai&&(r.findNextForAI(),c=r.checkForWinner()),c!==void 0){let h=c==="X"?"Player 1":"AI/Player 2";document.body.innerHTML=`<h1>Congratulations, ${c} (${h})!</h1>
    <form action="" method="get"><input type="submit" formaction="${window.location.href}" VALUE="Reset"></form>`}else t()}function t(){document.getElementById("app").innerHTML="",M(r,e),document.getElementById("player").innerText=r.CurrentPlayer}document.body.innerHTML=`<h1>Tic-Tac-TWO</h1>
    <div id="app"></div>`;let i="X",r=new y(n.toString());document.body.innerHTML+=`<h2>Current Player: <span id="player">X</span></h2>
    <div id="moving">Moving allowed in ${4-r.movesMade} moves.</div>
    <form method="get"><input type="submit" formaction="${window.location.href}" VALUE="Reset"/></form>`,t()}
