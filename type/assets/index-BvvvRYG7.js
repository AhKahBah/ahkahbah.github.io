var m=Object.defineProperty;var v=(o,t,i)=>t in o?m(o,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):o[t]=i;var c=(o,t,i)=>v(o,typeof t!="symbol"?t+"":t,i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function i(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(e){if(e.ep)return;e.ep=!0;const n=i(e);fetch(e.href,n)}})();function g(o,t){let i=document.getElementById("app");i.classList.add("board");let r=[o.currentGrid[0]-1,o.currentGrid[0]+3,o.currentGrid[1]-1,o.currentGrid[1]+3];for(let e=0;e<5;e++){let n=document.createElement("div");n.classList.add("row");for(let s=0;s<5;s++){let l=document.createElement("div");l.classList.add("cell"),l.innerHTML=o.board[e][s]||"_",l.addEventListener("click",d=>{t(e,s,d.target)}),o.currentGrid[0]<=e&&o.currentGrid[0]+3>e&&o.currentGrid[1]<=s&&o.currentGrid[1]+3>s?l.classList.add("grid"):(e===r[0]&&s>=r[2]&&s<=r[3]?l.classList.add("left"):e===r[1]&&s>=r[2]&&s<=r[3]&&l.classList.add("right"),s===r[2]&&e>=r[0]&&e<=r[1]?l.classList.add("up"):s===r[3]&&e>=r[0]&&e<=r[1]&&l.classList.add("down")),n.appendChild(l)}i.appendChild(n)}return i}const f=(o,t)=>(o=Math.ceil(o),t=Math.floor(t),Math.floor(Math.random()*(t-o))+o);class _{constructor(t){c(this,"_board",[[],[],[],[],[]]);c(this,"CurrentPlayer","X");c(this,"_currentGrid",[1,1]);c(this,"_movesMade",0);c(this,"_movingInProcess",!1);c(this,"_ai");this._ai=t=="on"}get ai(){return this._ai}makeMove(t,i){let r=t>=this._currentGrid[0]&&t<=this._currentGrid[0]+2&&i>=this._currentGrid[1]&&i<=this._currentGrid[1]+2;if(r&&this._board[t][i]===void 0&&this._movesMade<10)this._board[t][i]=this.CurrentPlayer,this.moveSuccess("+"),this.changePlayers(),this._movingInProcess=!1;else if(r&&this._board[t][i]===this.CurrentPlayer&&this._movesMade>3)this.moveSuccess("-"),this._board[t][i]=void 0,this._movingInProcess=!0;else return"fail";return this._board[t][i]}moveGrid(t){if(this._movingInProcess)return;let i=!1;if(t.contains("left")?(this._currentGrid[0]-=1,i=!0):t.contains("right")&&(this._currentGrid[0]+=1,i=!0),t.contains("up")?(this._currentGrid[1]-=1,i=!0):t.contains("down")&&(this._currentGrid[1]+=1,i=!0),!i)return"fail";this.changePlayers()}changePlayers(){this.CurrentPlayer=this.CurrentPlayer==="X"?"O":"X"}get board(){return this._board}get movesMade(){return this._movesMade}get currentGrid(){return this._currentGrid}moveSuccess(t){t==="+"?this._movesMade+=1:t==="-"&&(this._movesMade-=1)}checkForWinner(){if(this.movesMade>4){let t=this.findRowsColumnsDiagonals();for(let i=0;i<t.length;i++){const r=t[i];let e=0;for(let n=0;n<r.length;n++){const s=r[n];e+=s==="X"?1:s==="O"?-1:0}if(Math.abs(e)===3)return r[0]}}}findNextForAI(){let t=this.CurrentPlayer;console.log(t);let i=this.findRowsColumnsDiagonals();for(let r=0;r<i.length;r++){const e=i[r];let n=0,s=-1;for(let l=0;l<e.length;l++){const d=e[l];d===void 0&&(s=l),n+=d==="X"?1:d==="O"?-1:0}if(Math.abs(n)===2){r===6?this.makeMove(s+this._currentGrid[0],s+this._currentGrid[1]):r===7?this.makeMove(2-s+this._currentGrid[0],s+this._currentGrid[1]):r<3?this.makeMove(r+this._currentGrid[0],s+this._currentGrid[1]):r<6&&this.makeMove(s+this._currentGrid[0],r%3+this._currentGrid[1]);break}}for(;t===this.CurrentPlayer;){let r=f(0,4),e=f(0,4);this.makeMove(r,e)}}findRowsColumnsDiagonals(){let t=[[],[],[]];for(let e=this._currentGrid[0];e<this._currentGrid[0]+3;e++)for(let n=this._currentGrid[1];n<this._currentGrid[1]+3;n++)t[e-this._currentGrid[0]][n-this._currentGrid[1]]=this._board[e][n];let i=[[],[],[],[],[],[],[],[]],r=0;for(let e=0;e<3;e++)i[r]=t[e],r++;for(let e=0;e<3;e++)i[r][0]=t[0][e],i[r][1]=t[1][e],i[r][2]=t[2][e],r++;for(let e=0;e<3;e++)i[r][e]=t[e][e],i[r+1][e]=t[2-e][e];return i}}let h=document.querySelector("form");console.log(h);h.addEventListener("submit",o=>{o.preventDefault();let t=new FormData(h??void 0);console.log(t),t!==null&&(h.style.display="none",p(t.get("ai").toString()))});function p(o){function t(n,s,l){let d;if(l.classList.contains("grid"))d=e.makeMove(n,s),document.getElementById("player").innerText=e.CurrentPlayer;else if(e.movesMade>3){if(d=e.moveGrid(l.classList),d==="fail")return;i()}if(e.movesMade>3&&document.getElementById("moving").innerText!=="Moving allowed."){document.getElementById("moving").innerText="Moving allowed.";let u=document.createElement("link");u.rel="stylesheet",u.href="src/move.css",document.head.appendChild(u)}else e.movesMade<4&&(document.getElementById("moving").innerText=`Moving allowed in ${4-e.movesMade} moves.`);if(d==="fail")return;d!==void 0?l.innerHTML=d:l.innerHTML="_";let a=e.checkForWinner();if(console.log(a),e.CurrentPlayer!==r&&a===void 0&&e.ai&&(e.findNextForAI(),a=e.checkForWinner(),i()),a!==void 0){let u=a==="X"?"Player 1":"AI/Player 2";document.body.innerHTML=`<h1>Congratulations, ${a} (${u})!</h1>
    <form method="get"><input type="submit" formaction="${window.location.href}" VALUE="Reset"></form>`}}function i(){document.getElementById("app").innerHTML="",g(e,t),document.getElementById("player").innerText=e.CurrentPlayer}document.body.innerHTML=`<h1>Tic-Tac-TWO</h1>
    <script type="module" src="main.ts"><\/script>
    <div id="app"></div>`;let r="X",e=new _(o.toString());document.body.innerHTML+=`<h2>Current Player: <span id="player">X</span></h2>
    <div id="moving">Moving allowed in ${4-e.movesMade} moves.</div>
    <form method="get"><input type="submit" formaction="${window.location.href}" VALUE="Reset"/></form>`,i()}
